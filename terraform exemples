#!/bin/bash
yum install httpd php php-mysql -y
yum update
service httpd start
systemctl enable httpd
echo "<h1>Hello World</h1>" >> /var/www/html/index.html 


pour acceder a une machine EC2:
=================================
ssh -i "keySSH.pem" ec2-user@ec2-35-153-50-124.compute-1.amazonaws.com

copier directement sur EC2:
================================
scp -i keySSH.pem dark-stratum-359908-366a609df1b6.json  ec2-user@ec2-35-153-50-124.compute-1.amazonaws.com:~/
scp -i keySSH.pem keySSH.pem  ec2-user@ec2-35-153-50-124.compute-1.amazonaws.com:~/


provisionning terraform pour AWS:
================================

provider "aws" {
  access_key = "AKIA2RZDDG3EBDAQ4DCT"
  secret_key = "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"
  region     = "us-east-1"
}

resource "aws_instance" "EC2fromTF" {
  ami           = "ami-0b5eea76982371e91"
  instance_type = "t2.micro"
  tags = {
    Name = "EC2fromTF"
  }
}


provisionning terraform pour GCP
=================================

terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
      version = "3.5.0"
    }
  }
}

provider "google" {
  credentials = file("dark-stratum-359908-366a609df1b6.json")

  project = "dark-stratum-359908"
  region  = "us-central1"
  zone    = "us-central1-c"
}

resource "google_compute_network" "vpc_network" {
  name = "terraform-network"
}
====================================================================================

provisionning terraform pour AZURE
=================================

terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=2.71.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
    features {}
     subscription_id = "d71e63e8-0df6-4ca1-84ca-fe04cbc6c3fb"
     tenant_id = "3cb0adbe-b7b8-46b9-b399-42d8e550ee0a"
     client_id=  "d9158c6d-586a-4ce2-8216-4481ac0e24e6"
     client_secret = "6~f8Q~c14jq6B-Ukc-1UggboEI7WBZvvy4zQNbgK"
}

resource "azurerm_resource_group" "terra-demo" {
  name     = "terra-demo-rg"
  location = "east us"
}

resource "azurerm_network_interface" "terra-demo" {
  name                = "terra-demo-nic"
  location            = azurerm_resource_group.terra-demo.location
  resource_group_name = azurerm_resource_group.terra-demo.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.terra-demo.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.terra-demo.id
  }
}

resource "azurerm_linux_virtual_machine" "terra-demo" {
  name                = "terra-demo-machine01"
  resource_group_name = azurerm_resource_group.terra-demo.name
  location            = azurerm_resource_group.terra-demo.location
  size                = "Standard_D2_v2"
  admin_username      = "trainer"
  network_interface_ids = [
    azurerm_network_interface.terra-demo.id,
  ]

  admin_ssh_key {
    username   = "trainer"
    public_key = file("~/.ssh/id_rsa.pub")
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }
}
=======================================================================================
2 eme exemple  : machine Linux avec terraform
======================================================================================

terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=2.71.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
    features {}
     subscription_id = "d71e63e8-0df6-4ca1-84ca-fe04cbc6c3fb"
     tenant_id = "3cb0adbe-b7b8-46b9-b399-42d8e550ee0a"
     client_id=  "d9158c6d-586a-4ce2-8216-4481ac0e24e6"
     client_secret = "6~f8Q~c14jq6B-Ukc-1UggboEI7WBZvvy4zQNbgK"
}

resource "azurerm_resource_group" "example" {
  name     = "example-resources"
  location = "West Europe"
}

resource "azurerm_virtual_network" "example" {
  name                = "example-network"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name
}

resource "azurerm_subnet" "example" {
  name                 = "internal"
  resource_group_name  = azurerm_resource_group.example.name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.2.0/24"]
}

resource "azurerm_network_interface" "example" {
  name                = "example-nic"
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.example.id
    private_ip_address_allocation = "Dynamic"
  }
}

resource "azurerm_linux_virtual_machine" "example" {
  name                = "example-machine"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  size                = "Standard_F2"
  admin_username      = "adminuser"
  network_interface_ids = [
    azurerm_network_interface.example.id,
  ]

  admin_ssh_key {
    username   = "adminuser"
    public_key = file("~/.ssh/id_rsa.pub")
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }
}

==========================================================================================

sudo yum install -y yum-utils
    3  sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/$release/hashicorp.repo
    4  yum --showduplicate list terraform
    5  yum install terraform-0.14.0-2.x86_64
    6  release
    7  yum install wget unzip
    8  yum update
    9  wget https://releases.hashicorp.com/terraform/latest
   10  wget https://releases.hashicorp.com/terraform/0.13.2/terraform_0.13.2_linux_amd64.zip
   11  unzip terraform_0.13.2_linux_amd64.zip
   12  terraform -v
   13  wget https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_linux_amd64.zip
   14  unzip terraform_1.3.7_linux_amd64.zip
   15  terraform -v
   16  reboot
   17  pwd
   18  mkdir exemple
   19  cd exemple/
   20  ls
   21  ll
   22  nano tf1.tf


